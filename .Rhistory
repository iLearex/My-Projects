install.packages('swirl')
libraryh('swirl')
library('swirl')
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 100
c(z * 2 + 1000)
(z * 2 + 1000)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
dir()
list.files
?list.files
args(list.files())
args(list.files
args(list.files)
args(list.files)
old.dir
old.dir <- getwd()
dir.create(testdir)
dir.create('testdir')
setwd(testdir)
setwd('testdir')
file.create("mytest.R")
list.files
info()
skip()
file.exists()
mytest.R.exists()
'mytest.R'.exists()
skip()
file.info('mytest.R')
file.rename('mytest.R')
file.rename('mytest.R') to 'mytest2.R'
file.rename('mytest.R') to mytest2.R
skip(0)
skip()
file.copy('mytest2.R', 'mytest3.R')
demo()
swirl()
library('swirl')
ls()
swirl()
skip()
demo()
skip()
info()
skip()
bye()
rnorm(n, mean=0, sd=1)
#make this example reproducible
set.seed(1)
#generate sample of 200 obs. that follows normal dist. with mean=10 and sd=3
data <- rnorm(200, mean=10, sd=3)
#view first 6 observations in sample
head(data)
mean(data)
sd(data)
hist(data, col='steelblue')
shapiro.test(data)
data: data
x <- seq(-4, 4, length=100)
y <- dnorm(x)
plot(x,y, type = 'l', lwd = 2, axez = FALSE, xlab = '', ylab = '')
plot(x,y, type = 'l', lwd = 2, axes = FALSE, xlab = '', ylab = '')
warnings()
plot(x,y, type = "l", lwd = 2, axes = FALSE, xlab = "", ylab = "")
axis(1, at = -3:3, labels = c("-3s", "-2s", "-1s", "mean", "1s", "2s", "3s"))
library("swirl")
install_course("Statistical Inference")
swirl()
swirl()
swirl::install_course('Regression Models')
swirl()
start()
library("swirl")
swirl()
2
main()
rep(1, nrow(galton))
<- rep(1, nrow(galton))
- rep(1, nrow(galton))
info()
main()
main()
View(ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, family = binomial, data = ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
library(readxl)
mtcars <- read_excel("mtcars.csv")
library(readr)
dataset <- read_csv(NULL)
rlang::last_trace()
read_csv("mtcars.csv")
read_csv("mtcars.csv")
mtcars <- read_csv("mtcars.csv")
mdl <- glm(am ~ hp, family = binomial, data = mtcars)
summary(mdl)
library(ggplot2)
ggplot(mtcars, aes(x = hp, y = am)) +
geom_point() +
stat_smooth(method = "glm", method.args = list(family = binomial), se = FALSE) +
labs(title = "Logistic Regression: Transmission Type vs. Horsepower",
x = "Horsepower",
y = "Probability of Manual Transmission (am = 1)")
library(readr)
dataset <- read_csv(NULL)
rlang::last_trace()
df <- read.csv("cancer patient data sets.csv")
sum(is.na(df))
df <- df %>% select(--index)
install.packages("dplyr")
library(dplyr)
df <- df %>% select(--index)
View(df)
View(df)
View(df)
View(df)
df <- read.csv("cancer patient data sets.csv")
df <- df[ , !names(df) %in% c("index")]
sum(is.na(df))
df$Patient.Id
boxplot(df$Age, main="Boxplot of Age", horizontal=TRUE)
z_score <- (df$Age - mean(df$Age, na.rm=TRUE)) / sd(df$Age, na.rm=TRUE)
outliers <- df$column_name[abs(z_scores) > 3]
outliers <- df$column_name[abs(z_score) > 3]
print(outliers)
df %>%
filter(Age < lower_bound | Age > upper_bound)
data_clean['Level_numeric'] = data_clean['Level'.cat.codes
df.info()
str(df)
summary(data)
